<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ">
	<!-- this is the service object that we want to make transactional -->
	<context:component-scan base-package="cn.com.kc.blog">
		<context:exclude-filter type="regex"
			expression="cn.com.kc.blog.controller.service.impl.*" />
	</context:component-scan>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${connection.driver_class}"></property>
		<property name="url" value="${connection.url}"></property>
		<property name="username" value="${connection.username}"></property>
		<property name="password" value="${connection.password}"></property>
		<property name="maxActive" value="${connection.maxActive}"></property>
		
	</bean>
	<!-- 配置aop切点. -->
	<aop:config>
		<aop:pointcut id="blogServicePointCut"
			expression="execution(* cn.com.kc.blog.bl.service..*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="blogServicePointCut"></aop:advisor>
	</aop:config>
	<!-- 配置变量 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/configuration.properties</value>
				<value>classpath:properties/configuration.properties</value>
			</list>
		</property>
	</bean>
	<!-- 国际化的消息资源文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:properties/validatormessage</value>
				<value>classpath:properties/messages_zh_CN</value>
			</list>
		</property>
		<!--<property name="defaultEncoding" value="UTF-8" /> <property name="cacheSeconds" 
			value="60" /> -->
	</bean>
	
	<bean id="localeResolver"
	class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />
	<!-- Jcaptcha相关的配置 -->
	<!-- 默认生成的图片180秒过期 , 可另行设置 -->
	<!--  
	<bean id="jcaptchaService"
		class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<property name="captchaEngine">
			<bean class="cn.com.kc.blog.userauthenfilter.impl.GMailEngine" />
		</property>
		<property name="minGuarantedStorageDelayInSeconds" 
			value="180" /> 
	</bean> -->
	<import resource="classpath*:config/app-dap-mybatis.xml"/>
	<import resource="classpath*:config/app-dap-jdbc.xml"/>
	<import resource="classpath*:config/app-dao-hibernate.xml"/>
	
</beans>